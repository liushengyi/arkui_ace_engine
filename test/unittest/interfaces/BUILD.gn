# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("viewport_config_test") {
  module_out_path = "$interface_test_output_path/inner_api"

  sources = [ "viewport_config_test.cpp" ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]
}

ohos_unittest("ui_content_test") {
  module_out_path = "$interface_test_output_path/inner_api"

  sources = [
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/interfaces/inner_api/ace/ui_content.cpp",
    "ui_content_test.cpp",
  ]

  include_dirs = [
    "$window_manager_path/interfaces/innerkits",
    "$window_manager_path/interfaces/innerkits/wm",
    "$window_manager_path/wm/include",
  ]

  deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/test/unittest:ace_engine_unittest_flutter_deps",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson",
    "$graphic_2d_path/rosen/modules/render_service_client:librender_service_client",
    "${ace_root}/interfaces/inner_api/ace:ace_forward_compatibility",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "image_framework:image",
    "input:libmmi-client",
    "ipc:ipc_single",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:scene_session",
    "window_manager:scene_session_manager",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]
}

ohos_unittest("form_render_test") {
  module_out_path = "$interface_test_output_path/inner_api"
  include_dirs = [
    "$ace_root/interfaces/inner_api/form_render/include",
    "${accessibility_path}/interfaces/innerkits/common/include/",
  ]
  sources = [
    "$ace_root/frameworks/core/common/container_scope.cpp",

    # mock
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/test/mock/core/pipeline/mock_pipeline_base.cpp",
    "$ace_root/test/mock/interfaces/mock_uicontent_creator.cpp",

    # self
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_delegate_impl.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_delegate_proxy.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_delegate_stub.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_dispatcher_impl.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_dispatcher_proxy.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_dispatcher_stub.cpp",
    "$ace_root/interfaces/inner_api/form_render/src/form_renderer_group.cpp",
    "form_render_test.cpp",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]

  deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson",
    "$graphic_2d_path/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:runtime",
    "accessibility:accessibility_common",
    "ace_engine:ace_uicontent",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "form_fwk:form_manager",
    "graphic_2d:surface",
    "hilog:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

ohos_unittest("drawable_descriptor_test") {
  module_out_path = "$interface_test_output_path/inner_api"

  sources = [
    "$ace_root/interfaces/inner_api/drawable_descriptor/drawable_descriptor.cpp",
    "$ace_root/interfaces/inner_api/drawable_descriptor/image_converter.cpp",
    "drawable_descriptor_test.cpp",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]

  deps = [
    "$cjson_root:cjson",
    "$skia_root_new:skia_ohos",
    "//third_party/googletest:gmock_main",
  ]

  public_deps = [
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image",
    "image_framework:image_native",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]
}

ohos_unittest("ace_forward_compatibility_test") {
  module_out_path = "$interface_test_output_path/inner_api"

  sources = [
    "$ace_root/interfaces/inner_api/ace/ace_forward_compatibility.cpp",
    "ace_forward_compatibility_test.cpp",
  ]

  include_dirs = [ "${ace_root}/interfaces/inner_api/ace" ]

  external_deps = [
    "hilog:libhilog",
    "init:libbegetutil",
  ]
}

group("interfaces_unittest") {
  testonly = true
  deps = [
    ":ace_forward_compatibility_test",
    ":drawable_descriptor_test",
    ":form_render_test",
    ":ui_content_test",
    ":viewport_config_test",
  ]
}
