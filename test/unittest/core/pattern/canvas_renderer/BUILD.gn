# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("canvas_renderer_test_ng") {
  module_out_path = pattern_test_output_path

  sources = [ "canvas_renderer_test_ng.cpp" ]

  deps = [
    "$ace_root/adapter/ohos/osal:ace_osal_ohos_ohos",
    "$ace_root/frameworks/base:ace_base_ohos",
    "$ace_root/frameworks/base/resource:ace_resource",
    "$ace_root/frameworks/bridge:framework_bridge_ohos",
    "$ace_root/frameworks/core:ace_core_ohos",
    "$ace_root/frameworks/core/components/theme:build_theme_code",
    "$ace_root/frameworks/core/components_ng/base:ace_core_components_base_ng_ohos",
    "//third_party/googletest:gmock_main",
  ]

  configs = [
    ":config_canvas_renderer_test",
    "$ace_root/test/unittest:ace_unittest_config",
    "$ace_root:ace_coverage_config",
    "$ace_root:ace_test_config",
  ]

  defines = [ "ENABLE_DRAG_FRAMEWORK" ]

  sources += [
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/components/test/mock/mock_resource_adapter.cpp",
    "$ace_root/test/mock/adapter/mock_ace_application_info.cpp",
    "$ace_root/test/mock/adapter/mock_ace_container.cpp",
    "$ace_root/test/mock/adapter/mock_mmi_event_convertor.cpp",
    "$ace_root/test/mock/base/mock_download_manager.cpp",
    "$ace_root/test/mock/base/mock_drag_window.cpp",
    "$ace_root/test/mock/base/mock_subwindow.cpp",
    "$ace_root/test/mock/core/common/mock_interaction.cpp",
    "$ace_root/test/mock/core/common/mock_udmf.cpp",
    "$ace_root/test/mock/interfaces/mock_ace_forward_compatibility.cpp",
  ]

  if (is_ohos_standard_system) {
    sources -= [
      "$ace_root/frameworks/core/components/test/mock/mock_resource_adapter.cpp",
      "$ace_root/test/mock/base/mock_download_manager.cpp",
    ]
  }

  external_deps = [
    "ability_runtime:abilitykit_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "input:libmmi-client",
    "ipc:ipc_single",
    "napi:ace_napi",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:scene_session",
    "window_manager:scene_session_manager",
  ]

  if (enable_graphic_text_gine) {
    external_deps += [ "graphic_2d:rosen_text" ]
  }
}

config("config_canvas_renderer_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "$ace_root/frameworks",
    "$flutter_root/skia",
    "$flutter_root/engine",
    "$flutter_root/engine/flutter",
    "$flutter_root/engine/flutter/third_party/txt/src",
    "$flutter_root/skia/third_party/externals/harfbuzz/src",
  ]
  cflags_cc = [ "-w" ]
}
